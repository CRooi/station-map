name: Release CI

on:
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2

      - name: Get commit ID
        id: commit_id
        run: echo "::set-output name=commit_id::$(git rev-parse --short HEAD)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit_id.outputs.commit_id }}
          release_name: Release ${{ steps.commit_id.outputs.commit_id }}
          body: 'See the assets to download this version and install.'

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev libasound2-dev librsvg2-dev patchelf

      - name: Install app dependencies and build it
        run: |
          if [ ${{ matrix.platform }} == 'windows-latest' ]; then
            powershell -c "irm bun.sh/install.ps1 | iex" && bun i && bun tauri build
          else
            curl -fsSL https://bun.sh/install | bash && bun i && bun tauri build
          fi
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}